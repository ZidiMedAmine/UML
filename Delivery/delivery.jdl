
entity DeliveryAttachment {
	id UUID,
    title String required,
    description String,
    file AnyBlob required,
    date LocalDate,
    createdBy UUID,
}

entity Iteration {
    id UUID,
	code String required unique,
    number Integer required,
    summary String required,
    description String required,
    status DeliveryStatus required,
    plannedStartDate LocalDate required,
    plannedDeliveryDate LocalDate required,
    plannedDurationInDays Integer required,
    startDate LocalDate,
    deliveryDate LocalDate,
    durationInDays Integer,
    budget Double,
    averageCost Double,
    averageProfitMargin Float,
    order Integer required,
    orderPhaseId UUID,
	type PhaseType,
}

entity GenericActivity {
	id UUID,
    image ImageBlob,
	code String required unique,
    summary String required unique,
    description String,
    status DeliveryStatus required,
    plannedStartDate LocalDate required,
    plannedDeliveryDate LocalDate required,
    startDate LocalDate,
    deliveryDate LocalDate,
    budget Double,
    averageCost Double,
    businessUnit UUID required,
    jiraKey String,
    bitbucketKey String,
    confluenceKey String,
    bambooKey String,
    quickbooksKey String,
    pipedrive String,
    nextKey String,
    projectSheetFileName String,
    boardTask UUID,
}

@extends(genericActivity)
entity OtherActivity {
    requestor UUID,
    boardTask UUID,
}

@extends(genericActivity)
entity PresalesActivity {
    crmDealId UUID,
    clientId UUID,
    requestor UUID,
    salesInCharge UUID,
}

@extends(genericActivity)
entity DeliveryActivity {
    internalOrder UUID required,
    clientOrder UUID required,
    priority SubDealPriority required,
    lead UUID required,
    dealType DealType required,
    averageBudget Float,
    averageProfitMargin Float
}

@extends(deliveryActivity)
entity FixedPriceActivity {

}

@extends(deliveryActivity)
entity TimeAndMaterialActivity {

}

@extends(deliveryActivity)
entity LicensingActivity {
    product UUID required,
    license UUID required,
    licenseType ProductLicenseType required,
    quantity Integer required,
    plannedSubscriptionStartDate LocalDate required,
    plannedSubscriptionEndDate LocalDate,
    subscriptionStartDate LocalDate,
    subscriptionEndDate LocalDate,
}

@extends(deliveryActivity)
entity SupportProgramActivity {
    supportProgram UUID required,
    supportProgramName String required,
    serviceLevel UUID required,
    serviceLevelName String required,
    totalHours Float required,
    limitType SupportLimitType required,
    limitUnit LimitUnit required
    limit Float required,
}

entity ResourcePlanning {
	id UUID,
    summary String required,
	details TextBlob,
    employee UUID required,
	fromDate LocalDate required,
    toDate LocalDate required,
    regime Float min(1) max(100) required,
	serviceType UUID required,
	type ResourcePlanningType,
	leaveRequest UUID,
    notes String,
}

enum ResourcePlanningType {
	DELIVERY, PRESALES, TRAINING, LEAVE, OTHER
}

entity OtherActivityCategory {
	id UUID,
    name String required unique,
	description String,
}

entity SubscriptionLine {
	id UUID,
	code String required unique,
    subscriptionFromDate LocalDate required,
    subscriptionToDate LocalDate required,
    netPrice Double,
    totalPrice Double,
    invoice UUID,
    status SubscriptionLineStatus
}

entity PriceAdjustment {
	id UUID,
    date LocalDate required,
    summary String required,
    netOldPrice Double required,
    totalOldPrice Double required,
    netNewPrice Double required,
    totalNewPrice Double required,
}

entity Task {
	id UUID,
	code String required unique,
	summary String required,
	description TextBlob required,
	fromDate LocalDate required,
    toDate LocalDate required,
    regime Float required,
    dueDate LocalDate,
    deliveryDate LocalDate,
	assignee UUID,
    priority TaskPriority,
	ticketType UUID required,
    ticketPriority UUID required,
    status DeliveryStatus required,
    estimation Float required,
    businessUnit UUID required,
    priority TaskPriority,
    assignee UUID,
    orderTaskId UUID,
    serviceType UUID required,
    notes String,
    order Integer,
}

entity DealLink {
	id UUID,
    icon ImageBlob required,
    title String required,
    link String required,
    info String,
}

entity BlockReason {
	id UUID,
    reporter UUID required,
    reason String required,
    type BlockCauseType required,
    impact Integer min(1) max(3) required,
    resolutionAction String required,
    assignee UUID,
    status BlockStatus required
	date LocalDate required,
    resolutionDate LocalDate,
}

entity Retrospective {
	id UUID,
    reporter UUID required,
    date LocalDate required,
    subject String required,
	proposition String required,
    type RetrospectiveType,
    status RetrospectiveStatus,
}

entity RetrospectiveCategory {
	id UUID,
    name String required
    description String required
}

entity Expense {
	id UUID,
	code String required unique,
    requester UUID required,
    requestDate LocalDate,
    request UUID,
    summary String required,
	netAmount Float required,
    totalAmount Float required,
    expenseDate LocalDate,
    invoice UUID,
    date LocalDate required,
    notes String,
}

entity ExpenseCategory {
	id UUID,
    name String required
    description String required
}


entity ReportLog {
	id UUID,
	date LocalDate required,
	emitter UUID required,
	subject Text,
    text String,
	report AnyBlob,
    proof String,
    date LocalDate,
    progress Float,
    plannedDeliveryDate LocalDate,
}

entity DeliveryNote {
	id UUID,
	date LocalDate required,
	emitter UUID required,
	subject Text,
    text String,
    deliveryNote AnyBlob,
    date LocalDate,
    progress Float,
    plannedDeliveryDate LocalDate,
}

entity DeliveryStakeholderIds {
	id UUID,
    stakeholder UUID,
}

entity DeliveryAttachment {
	id UUID,
	name String,
    file AnyBlob required,
}

enum RetrospectiveType {
	IMPROVEMENT, CAPITALIZATION
}

enum TaskPriority {
    LOW, MEDIUM, CRITICAL
}


enum PhaseType {
    SCOPING, DEVELOPMENT, DEPLOY, WARRANTY
}

enum SubscriptionLineStatus {
	PLANNED, CURRENT, DELIVERED, CANCELLED
}

enum SubDealPriority {
    CRITICAL, MAJOR, MINOR
}


enum DeliveryStatus {
	PLANNED, IN_PROGRESS, DELIVERED, BLOCKED, CANCELLED
}

enum ProductLicenseType {
	PERPETUAL_LICENSE
	FLOATING_SUBSCRIPTION_LICENSE
	FIXED_SUBSCRIPTION_LICENSE
}

enum LimitUnit {
	DAY, WEEK, MONTH, QUARTER, YEAR
}

enum SupportLimitType {
	MAN_HOURS, TICKETS
}

enum DealType {
	TIME_AND_MATERIAL
    FIXED_PRICE,
    SUPPORT_PROGRAM,
    LICENSE
}

enum RetrospectiveStatus {
	OPEN, PROCESSING, CLOSED, REJECTED
}

enum BlockStatus {
	OPEN, CLOSED
}

enum BlockCauseType {
	INTERNAL, EXTERNAL
}

relationship ManyToMany {
    Task{deliveryNotes} to DeliveryNote{tasks}
    GenericActivity{dependsOn} to GenericActivity{blocks}
    DeliveryNote{stakeHolders} to DeliveryStakeholderIds{deliveryNotes}
    ReportLog{stakeHolders} to DeliveryStakeholderIds{reportLogs}
    DeliveryActivity{stakeHolders} to DeliveryStakeholderIds{businessDeals}
}

relationship OneToMany {
	Task{blocks} to BlockReason{task}
    Iteration{blocks} to BlockReason{iteration}
    GenericActivity{blocks} to BlockReason{activity}
	ExpenseCategory{expenses} to Expense{category required}
	GenericActivity{links} to DealLink{activity required}
	DeliveryActivity{reportLogs} to ReportLog{deal required}
    Iteration{deliveryNotes} to DeliveryNote{iteration}
    DeliveryActivity{deliveryNotes} to DeliveryNote{deal required}
	SubscriptionLine{priceAdjustment} to PriceAdjustment{subscriptionPart}
    LicensingActivity{subscriptionPart} to SubscriptionLine{licenseDeal}
    LicensingActivity{tasks} to Task{licenseDeal}
    SupportProgramActivity{iterations} to Iteration{supportProgramDeal}
	GenericActivity{expenses} to Expense{activity required},
    DeliveryActivity{retrospectives} to Retrospective{deal required}
    TimeAndMaterialActivity{iterations} to Iteration{timeAndMaterialDeal}
    FixedPriceActivity{iterations} to Iteration{fixedPriceDeal}
    GenericActivity{attachements} to DeliveryAttachment{deliveryActivity}
    PresalesActivity{tasks} to ScopeTask{presalesActivity}
    DeliveryActivity{resourcePlanning} to ResourcePlanning{presalesActivity}
    OtherActivityCategory{activities} to OtherActivity{category required}
}

relationship ManyToOne {
	Retrospective{category required} to RetrospectiveCategory{retrospectives }
    Task{iteration required} to Iteration{tasks},
}

paginate * with pagination
service *  with serviceImpl
angularSuffix *  with insight
filter *
dto * with mapstruct
microservice * with delivery