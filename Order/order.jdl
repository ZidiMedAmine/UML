
entity PlannedInvoicing {
	id UUID,
    summary String required,
    amount Float required,
    amountType ValueType,
    invoiceType InvoiceType,
    date LocalDate,
    plannedInvoicingDate LocalDate required,
    invoice UUID,
    notes String,
}

entity ScopeTaskLine {
	id UUID,
	code String required unique,
	summary String required,
    estimation Float required,
    serviceType UUID required,
    notes String,
    order Integer,
}

entity TimeTaskLine {
	id UUID,
	code String required unique,
    serviceType UUID required,
    summary String required,
	fromDate LocalDate required,
    toDate LocalDate required,
    regime Float required,
    notes String,
    order Integer,
}

entity SupportProgramLine {
	id UUID,
    code String required unique,
	supportProgram UUID required,
    supportProgramName String required,
	fromDate LocalDate required,
    toDate LocalDate required,
    totalHours Float required,
    limitType SupportLimitType,
    limitUnit LimitUnit
    limit Float,
    price Float required,
    discount Float,
    discountType ValueType,
    totalPrice Double required,
    averageCost Double,
    averageProfitMargin Float,
    notes String,
    order Integer,
}

entity LicenseLine {
	id UUID,
    code String required unique,
	license UUID required,
    productLicenseType ProductLicenseType,
    productName String required,
    licenseName String required,
    unitPrice Float,
    quantity Float required,
	subscriptionFromDate LocalDate required,
    subscriptionToDate LocalDate required,
    discount Float,
    discountType ValueType,
    totalPrice Double required,
    averageCost Double,
    averageProfitMargin Float,
    notes String,
    order Integer,
}

entity ClientOrder {
	id UUID,
	code String required unique,
    summary String required,
    description String required,
    plannedStartDate LocalDate required,
    plannedDeliveryDate LocalDate required,
    status ClientOrderStatus required,
    client UUID required,
    company UUID required,
    partner UUID,
    introducer UUID,
    seller UUID required,
	clientPurchaseOrderCode String required,
	clientPurchaseOrderDate String required,
    clientPurchaseOrder ImageBlob,
    stakeholderList UUID,
    creditCurrency UUID,
    debitCurrency UUID,
    leadBusinessUnit UUID,
    lead UUID,
    exchangeRate Float,
    discount Float,
    discountType OrderDiscountType,
    total Double,
    grandTotal Double,
    roundedAdjustment Float,
    roundedTotal Double,
    date LocalDate,
	invoiceList UUID,
	notes String,
}

entity PhaseLine {
	id UUID,
	code String required unique,
    summary String required,
    type PhaseType,
    plannedStartDate LocalDate required,
    plannedEndDate LocalDate required,
    durationInDays Integer,
    budget Double,
    averageCost Double,
    averageProfitMargin Float,
    order Integer required,
    notes String,
}

entity PotentialRisk {
	id UUID,
    code String required unique,
    reporter UUID required,
    date LocalDate required,
    summary String required,
    probability Integer required,
    impact Integer required,
    order Integer,
}

entity InternalOrder {
	id UUID,
	code String required unique,
	summary String required,
    status InternalOrderStatus required,
	type InternalOrderType required,
    totalPrice Double required,
    businessUnit UUID,
    priority SubOrderPriority,
    lead UUID,
    isLead Boolean,
    budget Double,
    averageCost Double,
    averageProfitMargin Float,
}


enum TaxAndChargeValueType {
	ACTUAL
	ON_NET_TOTAL
    ON_GRAND_TOTAL
    ON_PREVIOUS_ROW_AMOUNT
    ON_ITEM_QUANTITY
}

enum TaxOperationType {
    ADD, DEDUCT
}

enum InternalOrderStatus {
	DRAFT, SUBMITTED, VALIDATED, PLANNED, STARTED, DELIVERED, WARRANTY, CLOSED, CANCELLED
}

enum SupportLimitType {
	MAN_HOURS, TICKETS
}

enum SubOrderPriority {
    CRITICAL, MAJOR, MINOR
}

enum PhaseType {
    SCOPING, DEVELOPMENT, DEPLOY, WARRANTY
}

enum StakeholderType {
	INTERNAL, CLIENT, EXTERNAL
}

enum ValueType {
    PERCENTAGE, FIXED
}

enum InvoiceType {
	DEPOSIT, PROGRESS, CHANGE, UPSELLING, FINAL
}

enum InternalOrderType {
	TIME_AND_MATERIAL
    FIXED_PRICE,
    SUPPORT_PROGRAM,
    LICENSE
}

enum LimitUnit {
	DAY, WEEK, MONTH, QUARTER, YEAR
}
enum ProductLicenseType {
	PERPETUAL_LICENSE
	FLOATING_SUBSCRIPTION_LICENSE
	FIXED_SUBSCRIPTION_LICENSE
}
enum OrderDiscountType {
	AMOUNT, PERCENTAGE
}

enum QuotationStatus {
	DRAFT, SUBMITTED, ACCEPTED, REFUSED
}

enum ClientOrderStatus {
	DRAFT, SUBMITTED, VALIDATED, PLANNED, STARTED, DELIVERED, WARRANTY, CLOSED, CANCELLED
}

enum ItemType {
	LICENSE, SERVICE, SUPPORT_PROGRAM, PACKAGED_OFFER
}



relationship OneToMany {
	PhaseLine{plannedInvoicing} to PlannedInvoicing{phaseLine}
    LicenseLine{plannedInvoicing} to PlannedInvoicing{licenseLine}
    SupportProgramLine{plannedInvoicing} to PlannedInvoicing{supportProgramLine}
    OrderBudgetLine{timeTaskLines} to TimeTaskLine{budgetLine}
    OrderBudgetLine{scopeTaskLines} to ScopeTaskLine{budgetLine}
    OrderBudgetLine{licenseLines} to LicenseLine{budgetLine}
    OrderBudgetLine{supportProgramLines} to SupportProgramLine{budgetLine}
    ClientOrder{upselling} to ClientOrder{isUpsellingOf}
	ClientOrder{licenseLines} to LicenseLine{clientOrder}
	ClientOrder{plannedInvoicing} to PlannedInvoicing{clientOrder}
    PhaseLine{invoicing} to PlannedInvoicing{phase}
    SupportProgramLine{invoicing} to PlannedInvoicing{support}
}

relationship ManyToOne {
    InternalOrder{clientOrder required} to ClientOrder{internalOrders}
    SupportProgramLine{internalOrder required} to InternalOrder{supportProgramLines}
    LicenseLine{internalOrder required} to InternalOrder{licenseLines }
    OrderBudgetLine{internalOrder} to InternalOrder{orderBudgetLines required}
    PhaseLine{internalOrder required} to InternalOrder{phaseLines required}
    PotentialRisk{clientOrder required} to ClientOrder{potentialRisks}
    PhaseLine{timeAndMaterialOrderPhase} to ClientOrder{timeAndMaterialPhases required}
    PhaseLine{fixedPriceOrderPhase} to ClientOrder{fixedPricePhases required}
    OrderBudgetLine{clientOrder}  to ClientOrder{budget required}
    ScopeTaskLine{phase required} to PhaseLine{scopeTasks}
    TimeTaskLine{phase required} to PhaseLine{timeTasks}
    SupportProgramLine{clientOrder} to ClientOrder{supportProgramLines}
}

paginate * with pagination
service *  with serviceImpl
angularSuffix *  with insight
dto * with mapstruct
filter *

microservice * with order